$date
	Thu Aug 28 21:02:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module risc_8bit_processor_tb $end
$var parameter 32 ! CLK_PERIOD $end
$var parameter 32 " TIMEOUT_CYCLES $end
$var reg 1 # clk $end
$var reg 1 $ rst $end
$var integer 32 % cycle_counter [31:0] $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 8 & ex_alu_result [7:0] $end
$var wire 1 ' ex_branch_taken $end
$var wire 1 ( id_alu_src $end
$var wire 1 ) id_ex_bubble $end
$var wire 1 * id_reg_write $end
$var wire 1 + if_id_flush $end
$var wire 16 , if_instr [15:0] $end
$var wire 1 - load_use_hazard $end
$var wire 8 . mem_read_data [7:0] $end
$var wire 1 / pc_stall $end
$var wire 1 $ rst $end
$var wire 8 0 wb_write_data [7:0] $end
$var wire 8 1 pc_plus_1 [7:0] $end
$var wire 8 2 pc_next [7:0] $end
$var wire 8 3 id_rs2_data [7:0] $end
$var wire 4 4 id_rs2_addr [3:0] $end
$var wire 8 5 id_rs1_data [7:0] $end
$var wire 4 6 id_rs1_addr [3:0] $end
$var wire 4 7 id_rd_addr [3:0] $end
$var wire 4 8 id_opcode [3:0] $end
$var wire 1 9 id_mem_write $end
$var wire 1 : id_mem_to_reg $end
$var wire 1 ; id_mem_read $end
$var wire 4 < id_imm [3:0] $end
$var wire 1 = id_branch $end
$var wire 3 > id_alu_op [2:0] $end
$var wire 2 ? forwardB [1:0] $end
$var wire 2 @ forwardA [1:0] $end
$var wire 1 A ex_zero_flag $end
$var wire 8 B ex_branch_addr [7:0] $end
$var wire 8 C ex_alu_in2_base [7:0] $end
$var wire 8 D ex_alu_in2 [7:0] $end
$var wire 8 E ex_alu_in1 [7:0] $end
$var parameter 32 F A_WIDTH $end
$var parameter 32 G DMEM_SIZE $end
$var parameter 32 H D_WIDTH $end
$var parameter 32 I IMEM_SIZE $end
$var parameter 4 J OP_ADD $end
$var parameter 4 K OP_ADDI $end
$var parameter 4 L OP_AND $end
$var parameter 4 M OP_BEQ $end
$var parameter 4 N OP_HALT $end
$var parameter 4 O OP_LW $end
$var parameter 4 P OP_NOP $end
$var parameter 4 Q OP_OR $end
$var parameter 4 R OP_SL $end
$var parameter 4 S OP_SUB $end
$var parameter 4 T OP_SW $end
$var parameter 32 U REG_ADDR_WIDTH $end
$var parameter 32 V REG_COUNT $end
$var reg 8 W ex_alu_result_comb [7:0] $end
$var reg 8 X ex_mem_alu_result [7:0] $end
$var reg 1 Y ex_mem_branch_taken $end
$var reg 1 Z ex_mem_mem_read $end
$var reg 1 [ ex_mem_mem_to_reg $end
$var reg 1 \ ex_mem_mem_write $end
$var reg 4 ] ex_mem_rd_addr [3:0] $end
$var reg 1 ^ ex_mem_reg_write $end
$var reg 8 _ ex_mem_store_data [7:0] $end
$var reg 1 ` halted $end
$var reg 3 a id_ex_alu_op [2:0] $end
$var reg 1 b id_ex_alu_src $end
$var reg 1 c id_ex_branch $end
$var reg 4 d id_ex_imm [3:0] $end
$var reg 1 e id_ex_mem_read $end
$var reg 1 f id_ex_mem_to_reg $end
$var reg 1 g id_ex_mem_write $end
$var reg 8 h id_ex_pc_plus_1 [7:0] $end
$var reg 4 i id_ex_rd_addr [3:0] $end
$var reg 1 j id_ex_reg_write $end
$var reg 4 k id_ex_rs1_addr [3:0] $end
$var reg 8 l id_ex_rs1_data [7:0] $end
$var reg 4 m id_ex_rs2_addr [3:0] $end
$var reg 8 n id_ex_rs2_data [7:0] $end
$var reg 16 o if_id_instr [15:0] $end
$var reg 8 p if_id_pc_plus_1 [7:0] $end
$var reg 1 q if_id_valid $end
$var reg 8 r mem_wb_alu_result [7:0] $end
$var reg 1 s mem_wb_mem_to_reg $end
$var reg 4 t mem_wb_rd_addr [3:0] $end
$var reg 8 u mem_wb_read_data [7:0] $end
$var reg 1 v mem_wb_reg_write $end
$var reg 8 w pc [7:0] $end
$var integer 32 x i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 V
b100 U
b11 T
b101 S
b1001 R
b1000 Q
b0 P
b100 O
b1111 N
b110 M
b111 L
b1 K
b10 J
b100000000 I
b1000 H
b100000000 G
b1000 F
b11001000 "
b1010 !
$end
#0
$dumpvars
b10000 x
b0 w
0v
b0 u
b0 t
0s
b0 r
0q
b0 p
b0 o
bx n
bx m
bx l
bx k
0j
b0 i
bx h
0g
0f
0e
bx d
0c
0b
b0 a
0`
b0 _
0^
b0 ]
0\
0[
0Z
0Y
b0 X
b0 W
bx E
bx D
bx C
bx B
xA
b0 @
b0 ?
b0 >
0=
b0 <
0;
0:
09
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b1 2
b1 1
b0 0
0/
b0 .
0-
b1000100000101 ,
0+
0*
0)
0(
0'
b0 &
bx %
1$
0#
$end
#5
1#
#10
0#
#15
1#
#20
0#
b0 %
0$
#25
b1 >
1A
b0 D
1*
1(
b0 E
b0 B
b0 C
b1 8
b1 7
b101 4
b101 <
b10 2
bx _
b0 m
b0 k
b0 d
b0 n
b0 l
b0 h
1q
b1 p
b1000100000101 o
b10 1
b1001000001010 ,
b1 w
b1 %
1#
#30
0#
#35
b101 &
b101 W
0A
b101 D
b11 2
b10 7
b1010 4
b1010 <
b101 C
b11 1
b10001100010010 ,
b10 w
b10 p
b1001000001010 o
b1 i
b101 m
b101 d
b110 B
b1 h
1b
b1 a
1j
b0 _
b10 %
1#
#40
0#
#45
b11111010 &
b11111010 W
b11111010 D
1*
0(
b11111010 C
b10 8
b11 7
b1 6
b10 4
b10 <
b100 2
b1 ]
b101 _
b101 X
1^
b10 i
b1010 m
b1010 d
b11111100 B
b10 h
b11 p
b10001100010010 o
b100 1
b1010000001100 ,
b11 w
b11 %
1#
#50
0#
#55
b101 E
b11111111 &
b11111111 W
b10 @
1(
b1 ?
0A
b11111010 D
b101 2
b1 8
b100 7
b0 6
b1100 4
b1100 <
b0 C
b101 0
b101 1
b11001101000000 ,
b100 w
b100 p
b1010000001100 o
b11 i
b10 m
b1 k
b10 d
b101 B
b11 h
0b
b10 ]
b11111010 _
b11111010 X
b1 t
b101 r
1v
b100 %
1#
#60
0#
#65
b0 @
b0 E
0*
b11111100 &
b11111100 W
b0 ?
b11111010 0
b11111100 D
b11111100 C
19
b11 8
b11 7
b100 6
b0 4
b0 <
b110 2
b10 t
b11111010 r
b11 ]
b11111111 X
b100 i
b1100 m
b0 k
b1100 d
b0 B
b100 h
1b
b101 p
b11001101000000 o
b110 1
b100010101000000 ,
b101 w
b101 %
1#
#70
0#
#75
1*
b11111100 &
b11111100 W
b1 >
b11111100 E
b0 D
1(
b1 @
b111 2
1:
1;
09
b100 8
b101 7
b0 C
b11111111 0
b111 1
b101011000100001 ,
b110 w
b110 p
b100010101000000 o
b11 i
b0 m
b100 k
b0 d
b101 B
b101 h
1g
0j
b100 ]
b11111100 _
b11111100 X
b11 t
b11111111 r
b110 %
1#
#80
0#
#85
b11111100 &
b11111100 W
1*
b10 >
0A
b11111100 E
0(
b10 @
b11111010 5
b101 3
b11111100 0
0:
0;
b101 8
b110 7
b10 6
b1 4
b1 <
b1000 2
b100 t
b11111100 r
b11 ]
b0 _
1\
0^
b101 i
b110 B
b110 h
1f
0g
1e
1j
b111 p
b101011000100001 o
b1000 1
b110000101100010 ,
b111 w
b111 %
1#
#90
0#
#95
0*
b11111010 E
b11110101 &
b11110101 W
b0 @
b101 D
b0 5
b11111010 3
b1001 2
1=
b110 8
b1 7
b110 6
b10 4
b10 <
b101 C
b1001 1
b0 ,
b1000 w
b1000 p
b110000101100010 o
b110 i
b1 m
b10 k
b1 d
b101 n
b11111010 l
b1000 B
b111 h
0f
0e
0b
b10 a
b101 ]
1[
0\
1Z
1^
b11 t
0v
b1000 %
1#
#100
0#
#105
b0 >
b11111010 D
b11111011 &
b11111011 W
b1 @
b11110101 E
b0 3
b0 0
b11111010 C
0=
b0 8
b0 7
b0 6
b0 4
b0 <
b1010 2
b101 t
1s
1v
b110 ]
b101 _
b11110101 X
0[
0Z
b1 i
b10 m
b110 k
b10 d
b11111010 n
b0 l
b1010 B
b1000 h
1c
0j
b1001 p
b0 o
b1010 1
b1001 w
b1001 %
1#
#110
0#
#115
1A
b0 D
b0 @
b1011 2
b0 C
b0 &
b0 W
b0 E
b11110101 0
b1011 1
b1111111111111111 ,
b1010 w
b1010 p
b0 i
b0 m
b0 k
b0 d
b0 n
b1001 B
b1001 h
0c
b0 a
b1 ]
b11111010 _
b11111011 X
0^
b110 t
b11110101 r
0s
b1010 %
1#
#120
0#
#125
b11111011 0
b1111 8
b1111 7
b1111 6
b1111 4
b1111 <
b1100 2
b1 t
b11111011 r
0v
b0 ]
b0 _
b0 X
b1010 B
b1010 h
b1011 p
b1111111111111111 o
b1100 1
b0 ,
b1011 w
b1011 %
1#
#130
0#
#135
b1101 2
b0 8
b0 7
b0 6
b0 4
b0 <
b0 0
1`
b1101 1
b1100 w
b1100 p
b0 o
b1111 i
b1111 m
b1111 k
b1111 d
b1010 B
b1011 h
b0 t
b0 r
b1100 %
1#
#140
0#
#145
b1111 ]
b0 i
b0 m
b0 k
b0 d
b1100 B
b1100 h
0q
b1101 p
b1101 %
1#
